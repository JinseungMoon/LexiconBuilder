{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"feth",
				"fetchedCount	statement"
			],
			[
				"sort",
				"sortedTermList	statement"
			],
			[
				"en",
				"encode"
			],
			[
				"rep",
				"replace"
			],
			[
				"in",
				"index"
			],
			[
				"term",
				"termlist"
			],
			[
				"out",
				"outDir	statement"
			],
			[
				"par",
				"paraText	statement"
			],
			[
				"char",
				"charCounts	statement"
			],
			[
				"fe",
				"fetchedCount	statement"
			],
			[
				"ex",
				"extractContent"
			],
			[
				"ext",
				"extractContent	function"
			],
			[
				"num",
				"num_worker_threads"
			],
			[
				"ta",
				"task_done	function"
			],
			[
				"q",
				"qsize	function"
			],
			[
				"le",
				"letterList	statement"
			],
			[
				"get",
				"getTermLinks	function"
			],
			[
				"lett",
				"letterList	statement"
			],
			[
				"Threa",
				"ThreadPool	function"
			],
			[
				"Po",
				"Process	class"
			],
			[
				"di",
				"dictionary	statement"
			],
			[
				"ini",
				"initThread	function"
			],
			[
				"da",
				"datetime	class"
			],
			[
				"wan",
				"Warnngs"
			],
			[
				"tota",
				"totalCount	statement"
			],
			[
				"as",
				"ascii"
			],
			[
				"fi",
				"fileName"
			],
			[
				"file",
				"fileName"
			],
			[
				"tot",
				"totalCount"
			],
			[
				"last",
				"lastPage"
			],
			[
				"link",
				"linkElements"
			],
			[
				"linkEl",
				"linkElements"
			],
			[
				"Link",
				"linkElements"
			],
			[
				"linkElem",
				"linkElment"
			],
			[
				"pageCo",
				"pageCount"
			],
			[
				"termLink",
				"termLinkTagList"
			],
			[
				"termli",
				"termLinkList"
			],
			[
				"con",
				"contentOfTerm	statement"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"remove p",
				"Package Control: Remove Package"
			],
			[
				"in",
				"Package Control: Install Package"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"\"python -u /Users/jinseungmoon/Developer/LexiconBuilder/src/extracter.py\"",
			"\"python\" -u /Users/jinseungmoon/Developer/LexiconBuilder/src/extracter.py",
			"python -u /Users/jinseungmoon/Developer/LexiconBuilder/src/extracter.py",
			"\"python\" -u \"/Users/jinseungmoon/Developer/LexiconBuilder/src/extracter.py\"",
			"python -u extracter.py",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jinseungmoon/Developer/LexiconBuilder",
		"/Users/jinseungmoon/Developer/LexiconBuilder/lib",
		"/Users/jinseungmoon/Developer/LexiconBuilder/ref",
		"/Users/jinseungmoon/Developer/LexiconBuilder/ref/other_src",
		"/Users/jinseungmoon/Developer/LexiconBuilder/src"
	],
	"file_history":
	[
		"/Users/jinseungmoon/Developer/LexiconBuilder/src/extracter.py",
		"/Users/jinseungmoon/Developer/LexiconBuilder/ref/other_src/term_extraction.py",
		"/Users/jinseungmoon/developer/lexiconBuilder/out/term_d-modified.json",
		"/Users/jinseungmoon/developer/lexiconBuilder/out/term_d.json",
		"/Users/jinseungmoon/developer/lexiconBuilder/out/urlList_all.json",
		"/Users/jinseungmoon/developer/lexiconBuilder/out/term_#-modified.json",
		"/Users/jinseungmoon/Developer/LexiconBuilder/etc/algorithm.sl",
		"/Users/jinseungmoon/Developer/LexiconBuilder/ref/other_src/term_urls_extraction.py",
		"/Users/jinseungmoon/Developer/LexiconBuilder/out/termlist.json",
		"/Users/jinseungmoon/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/jinseungmoon/Developer/LexiconBuilder/ref/other_src/term_url_list.json",
		"/Users/jinseungmoon/Developer/LexiconBuilder/etc/algorithm",
		"/Users/jinseungmoon/Developer/LexiconBuilder/ref/other_src/add missing links.py",
		"/Users/jinseungmoon/Developer/LexiconBuilder/main.py",
		"/Users/jinseungmoon/Downloads/a_credit.data",
		"/Users/jinseungmoon/Developer/LexiconBuilder/etr.py",
		"/Users/jinseungmoon/Developer/LexiconBuilder/TermExt.sublime-project",
		"/Users/jinseungmoon/Developer/HtmlExtPy/main.py",
		"/Users/jinseungmoon/Developer/HtmlExtPy/etr.py",
		"/Users/jinseungmoon/Library/Application Support/Sublime Text 3/Packages/User/python3.sublime-build",
		"/Users/jinseungmoon/Developer/HtmlExtPy/example2.py",
		"/Users/jinseungmoon/Developer/HtmlExtPy/example.py",
		"/Users/jinseungmoon/Downloads/beautifulsoup4-4.4.1/setup.py",
		"/Users/jinseungmoon/work/repo/html/helloworld.html"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\"deficit\"",
			"\"term\": \"\"",
			"deficit",
			"totalCount",
			"anchorTerms",
			"anchor",
			"anchors",
			"501(c)",
			"institute of chartered accountants",
			")\"",
			"CASH DISCOUNT",
			"cash discounts",
			"1-10",
			"()",
			"urlArray",
			"urlList",
			"al.",
			"al",
			"flt",
			"relatedLinks",
			"urlList",
			"termList",
			"termlist",
			".json",
			"anchorFilePath",
			"fl",
			"totalCount",
			"getTermLinks",
			"fetchedCount",
			"totalCount",
			"3rdParty",
			"termList",
			"fl",
			"urls_json",
			"open",
			"termList",
			"termLink",
			"append",
			"termUrl",
			"termList",
			"dictionary",
			"h1",
			"208",
			"h1",
			"codec",
			"logf",
			"log.",
			"log",
			"paraText",
			"charCounts",
			"pCharCounts",
			"linkfilePath",
			"content",
			"termDefElements",
			"fetched.",
			"n",
			"funcCount",
			"warnCount",
			"fetched",
			"time.",
			"termLinks",
			"termIdx",
			"etr.",
			"string",
			"termDefElements",
			"daytime",
			"Page",
			"page",
			"()\n",
			"page",
			"pageUrl",
			"pageContent",
			"getHref",
			"termContentElements",
			"print",
			"WarnngsCount",
			"fLog",
			"curDir",
			"num",
			"termDefElement",
			"idx",
			"idxList",
			"data",
			"repr(",
			"write",
			"fileName",
			"FileName",
			"fileName",
			"FileName",
			"fileName",
			"txt",
			"termcount",
			"totalCountOfTerm",
			"getSoup",
			"get",
			"getSoup",
			"get",
			"link",
			"idx",
			"termIdx",
			"termLink",
			"termIdx",
			"element",
			"elements",
			"linkElements",
			"link",
			"termLinkTag",
			"termLinkList",
			"letter",
			"dictionary",
			"termIdx",
			"extSoup",
			"contentOfTerm",
			"link",
			"termUrl",
			"termFullUrl",
			"termUrl",
			"termLinkList",
			"termLinkContent",
			"termLinkListSoup",
			"termLinkListHtml",
			"\n#",
			"# print termLinkContent.find(\"a\", title=\"Go to last page\").get(\"href\").lstrip(\"terms/\" + termIdx + \"?page=\")\n",
			"term",
			"termLinkContent",
			"termLinkListSoup",
			"termLinkContent",
			"str"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"fetched.",
			"",
			"url",
			"term"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 322.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 118.0
	},
	"pinned_build_system": "",
	"project": "lexiconbuilder.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 250.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
